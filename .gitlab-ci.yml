---
image: docker/sls-amazonlinux:node12.x_python36-2.0.1

variables:
  AWS_REGION: eu-central-1

stages:
  - quality
  - verify
  - audit
  - deploy

audit_mergerequest:
  stage: audit
  only:
    - merge_requests
  allow_failure: true
  script:
    - npm audit --production

deploy_to_dev:
  stage: deploy
  only:
    - merge_requests
    - master
  script:
    - npm ci
    - npx tsc
    - sls deploy --profile="" --config=serverless.yml --stage=dev --region=$AWS_REGION
  environment:
    name: dev
  needs: []
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

deploy_to_tst:
  stage: deploy
  only:
    - master
  script:
    - npm ci
    - npx tsc
    - sls deploy --profile="" --config=serverless.yml --stage=tst --region=$AWS_REGION
  environment:
    name: tst
  when: manual
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

deploy_to_acc:
  stage: deploy
  only:
    - master
  script:
    - npm ci
    - npx tsc
    - sls deploy --profile="" --config=serverless.yml --stage=acc --region=$AWS_REGION
  environment:
    name: acc
  when: manual
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

deploy_to_smock:
  stage: deploy
  only:
    - master
  script:
    - npm ci
    - npx tsc
    - sls deploy --profile="" --config=serverless.yml --stage=smock --region=$AWS_REGION
  environment:
    name: smock
  when: manual
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

"PROD: deploy":
  stage: deploy
  only:
    - tags
  script:
    - npm ci
    - npx tsc
    - sls deploy --profile="" --config=serverless.yml --stage=prd --region=$AWS_REGION
  environment:
    name: prd
  when: manual
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
